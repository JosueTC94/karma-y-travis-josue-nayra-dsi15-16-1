var expect=chai.expect;describe("Medida",function(){var e=new Medida(45,"km"),t=new Medida("45km"),o=new Medida("77 m");describe("Construccion",function(){it("Se crean los objetos medida1, medida2, medida3",function(){expect(e).to.be.an("object"),expect(e).to.exist,expect(e).to.not.be["null"],expect(t).to.be.an("object"),expect(t).to.exist,expect(t).to.not.be["null"],expect(o).to.be.an("object"),expect(o).to.exist,expect(o).to.not.be["null"]}),it("Se construye medida pasandole al constructor: Valor y Tipo",function(){expect(e).to.not.be["null"],expect(e.valor).to.equal(45),expect(e.tipo).to.equal("km")}),it("Se construye medida pasandole al constructor: Valor",function(){expect(t.valor).to.not.be.empty,expect(t.tipo).to.not.be.empty,expect(t.valor).to.equal(45),expect(t.tipo).to.equal("km")}),it("Los objetos medida1, medida2 y medida3 son instancias de Medida",function(){expect(e).to.be.an["instanceof"](Medida),expect(t).to.be.an["instanceof"](Medida),expect(o).to.be.an["instanceof"](Medida)}),it("Los objetos medida1, medida2 y medida3 tienen los atributos: valor y tipo",function(){expect(e).to.have.property("valor"),expect(e).to.have.property("tipo")})}),describe("Comparando las medidas",function(){it("El valor y tipo de los objetos medida1 y medida2 son iguales",function(){expect(e.valor).to.be.equal(t.valor),expect(e.tipo).to.be.equal(t.tipo)}),it("El valor y tipo de los objetos medida3 y medida1 o medida2 son diferentes",function(){expect(o.valor).to.not.be.equal(e.valor),expect(o.valor).to.not.be.equal(t.valor),expect(o.tipo).to.not.be.equal(e.tipo),expect(o.tipo).to.not.be.equal(t.tipo)}),it("El valor del objeto medida3 es mayor que el valor del objeto medida1",function(){expect(e.valor).to.not.be.above(o.valor),expect(o.valor).to.be.above(t.valor)}),it("El valor del objeto medida1 es menor que el valor del objeto medida3",function(){expect(e.valor).to.be.below(o.valor)}),it("El valor de los objetos medida1, medida2 y medida3 esta dentro del rango 40-100",function(){expect(e.valor).to.be.within(40,100),expect(t.valor).to.be.within(40,100),expect(o.valor).to.be.within(40,100)}),it("El valor de los objetos medida1 y medida2 no esta dentro del rango 50-100",function(){expect(e.valor).to.not.be.within(50,100),expect(t.valor).to.not.be.within(50,100)})}),describe("Pruebas y casos",function(){it("Medida1, medida2 y medida3 hacen match con la regexp",function(){var a=e.valor+" "+e.tipo,n=t.valor+" "+t.tipo,i=o.valor+" "+o.tipo;expect(a).to.match(/^\s*([-+]?\d+(?:\.\d*)?(?:e[+-]?\d+)?)\s*[a-z][a-z0-9]*$/i),expect(n).to.match(/^\s*([-+]?\d+(?:\.\d*)?(?:e[+-]?\d+)?)\s*[a-z][a-z0-9]*$/i),expect(i).to.match(/^\s*([-+]?\d+(?:\.\d*)?(?:e[+-]?\d+)?)\s*[a-z][a-z0-9]*$/i)}),it("Creando objeto Medida con un solo parámetro",function(){var e=new Medida("50c");expect(e.valor).to.be.equal(50),expect(e.tipo).to.be.equal("c")}),it("Devolviendo desconozco como se puede... en función convertir",function(){var e="1p to z",t=Medida.match(e),o=t.tipo,a=t.to;console.log("Tipo->"+o),console.log("Destino->"+a),expect(Medida.convertir("1p to z")).to.be.equal("Desconozco como convertir desde "+o+" hasta "+a)}),it("Devolviendo Introduzca una temperatura...",function(){var e="1z";expect(Medida.convertir(e)).to.be.equal("Introduzca una temperatura valida: 330e-1 F to C")})})}),describe("Temperatura",function(){var e=new Temperatura(100,"C"),t=new Temperatura(200,"F"),o=new Temperatura(300,"K"),a=new Celsius(10),n=new Farenheit(20),i=new Kelvin(400);describe("Construccion",function(){it("Los objetos t1,t2 y t3 son instancias de la clase Temperatura y Medida",function(){expect(e).to.be.an["instanceof"](Medida),expect(e).to.be.an["instanceof"](Temperatura),expect(e).to.exist,expect(e).to.not.be["null"],expect(t).to.be.an["instanceof"](Medida),expect(t).to.be.an["instanceof"](Temperatura),expect(t).to.exist,expect(t).to.not.be["null"],expect(o).to.be.an["instanceof"](Medida),expect(o).to.be.an["instanceof"](Temperatura),expect(o).to.exist,expect(o).to.not.be["null"]}),it("Se crea un objeto de tipo Celsius",function(){expect(a).to.be.an["instanceof"](Medida),expect(a).to.be.an["instanceof"](Temperatura),expect(a).to.be.an["instanceof"](Celsius),expect(a).to.exist}),it("Para el objeto Celsius, existe un metodo toFarenheit y toKelvin",function(){expect(a).to.respondTo("toFarenheit"),expect(a).to.respondTo("toKelvin")}),it("Se crea un objeto de tipo Farenheit",function(){expect(n).to.be.an["instanceof"](Medida),expect(n).to.be.an["instanceof"](Temperatura),expect(n).to.be.an["instanceof"](Farenheit),expect(n).to.exist}),it("Para el objeto Farenheit, existe un metodo toCelsius y toKelvin",function(){expect(n).to.respondTo("toCelsius"),expect(n).to.respondTo("toKelvin")}),it("Se crea un objeto de tipo Kelvin",function(){expect(i).to.be.an["instanceof"](Medida),expect(i).to.be.an["instanceof"](Temperatura),expect(i).to.be.an["instanceof"](Kelvin),expect(i).to.exist}),it("Para un objeto Kelvin, existe un metodo toCelsius y toFarenheit",function(){expect(i).to.respondTo("toCelsius"),expect(i).to.respondTo("toFarenheit")})})});